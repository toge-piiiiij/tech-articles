(this["webpackJsonptech-articles"]=this["webpackJsonptech-articles"]||[]).push([[0],{167:function(e,t,a){},169:function(e,t,a){"use strict";a.r(t);var n=a(0),r=a.n(n),l=a(18),o=a.n(l),c=(a(77),a(78),a(35)),i=a(57),m=a.n(i),g=a(30),u=a(60),d=a.n(u),s=a(186),E=a(61),h=a.n(E),f=a(62),b=a.n(f),p=a(63),v=a.n(p),y=[{component:h.a},{component:b.a},{component:v.a}],B=(a(167),function(e){return e.value.replace(/:\w+:/gi,(function(e){return d.a.getUnicode(e)}))});var $=function(){var e=Object(n.useState)(""),t=Object(c.a)(e,2),a=t[0],l=t[1];return r.a.createElement(r.a.Fragment,null,r.a.createElement(g.a,null,r.a.createElement("title",null,"MurMuring .....")),r.a.createElement("div",{className:"randomly-murmur"},r.a.createElement(s.a,{className:"randomly-click",variant:"contained",size:"large",color:"primary",onClick:function(){var e=y[Math.floor(Math.random()*Math.floor(y.length))];fetch(e.component).then((function(e){return e.text()})).then((function(e){l(e)}))}},"Click me to see random post"),r.a.createElement(m.a,{source:a,renderers:{text:B}})))},w=a(36),k=a(33),D=a.n(k);var x=function(e){var t=e.code,a=e.language,l=Object(n.useRef)(null);Object(n.useEffect)((function(){o()}));var o=function(){D.a.highlightElement(l.current)};return r.a.createElement("pre",null,r.a.createElement("code",{ref:l,className:"language-".concat(a)},t.trim()))};var j=function(e){var t=e.language,a=e.children,l=Object(n.useRef)(null);Object(n.useEffect)((function(){o()}));var o=function(){D.a.highlightElement(l.current)};return r.a.createElement("code",{ref:l,className:"language-".concat(t)},a)};var A=[{component:function(){var e=["$ git tag temp-apple","$ git cat-file -p temp-apple\n\n# tree b2b161aefc2b86809ad8e2d7d16db45768ceda31\n# parent e20b06ad080192dbf775d980ca517365bdf197a9\n# author toge-piiiiij <jia0.togepiii@gmail.com> 1599195339 +0800\n# committer toge-piiiiij <jia0.togepiii@gmail.com> 1599195339 +0800","# same as git rev-parse HEAD\n$ git rev-parse temp-apple\n# 750d2b113551ef2d8de397687f34600a7918d84c","$ git tag second-temp-apple -a -m 'This is second tag with message'","$ git cat-file -p second-temp-apple\n# object 750d2b113551ef2d8de397687f34600a7918d84c\n# type commit\n# tag second-temp-apple\n# tagger toge-piiiiij <jia0.togepiii@gmail.com> 1599279159 +0800\n\nThis is second tag with message","$ git rev-parse second-temp-apple\n1dbef0603debff29c5f2f3cce52a2605548dc85d","$ git push --tags","$ git push origin temp-apple"];return r.a.createElement("div",null,r.a.createElement(w.a,{variant:"h6",gutterBottom:!0},"Unannotated tag also normal & lightweight."),r.a.createElement(x,{code:e[0],language:"sh"}),r.a.createElement(w.a,{variant:"body1",gutterBottom:!0},"see the result then. tree, [parent], author, committer"),r.a.createElement(x,{code:e[1],language:"sh"}),r.a.createElement(w.a,{variant:"body1",gutterBottom:!0},"get the real object, the real commit as you thought"),r.a.createElement(x,{code:e[2],language:"sh"}),r.a.createElement(w.a,{variant:"h6",gutterBottom:!0},"Annotated tag"),r.a.createElement(x,{code:e[3],language:"sh"}),r.a.createElement(w.a,{variant:"body1"},"result"),r.a.createElement(x,{code:e[4],language:"sh"}),r.a.createElement(w.a,{variant:"body1"},"It's real commit"),r.a.createElement(x,{code:e[5],language:"sh"}),r.a.createElement(w.a,{variant:"body1",gutterBottom:!0},"You can use ",r.a.createElement(j,null,"git show")," for display annotated tag."),r.a.createElement(w.a,{variant:"body1",gutterBottom:!0},"Unannotated is a just pointer to the commit"),r.a.createElement(w.a,{variant:"h1",gutterBottom:!0}),r.a.createElement(w.a,{variant:"h6",gutterBottom:!0},"Finally you can push all tags to remote"),r.a.createElement(x,{code:e[6],language:"sh"}),r.a.createElement(w.a,{variant:"body1",gutterBottom:!0},"...or push spec tag"),r.a.createElement(x,{code:e[7],language:"sh"}))},title:"Create Tag",path:"create-tag"},{component:function(){var e=["$ git tag -d [tagName]","# All are the same\n$ git push -d origin [tagName]\n$ git push origin :[tagName]\n$ git push origin :refs/tags/[tagName]\n"];return r.a.createElement("div",null,r.a.createElement(w.a,{variant:"body1",gutterBottom:!0},"Delete tag locally"),r.a.createElement(x,{code:e[0],language:"sh"}),r.a.createElement(w.a,{variant:"body1",gutterBottom:!0},"Delete tag remotely"),r.a.createElement(x,{code:e[1],language:"sh"}))},title:"Delete Tag",path:"delete-tag"},{component:function(){return r.a.createElement("div",null,r.a.createElement(w.a,{variant:"body1",gutterBottom:!0},"\u65b0\u589e\u4e00\u500b\u53eb\u505ajq\u7684\u9060\u7aef\u5009\u5eab\u5730\u5740",r.a.createElement(j,null,"origin")),r.a.createElement(x,{code:"$ git remote add jq https://github.com/jquery/jquery.git",language:"sh"}),r.a.createElement(w.a,{variant:"body1",gutterBottom:!0},"\u5217\u51fa\u5009\u5eab\u8207\u7528\u9014"),r.a.createElement(x,{code:"$ git remote -v\n# jq      https://github.com/jquery/jquery.git (fetch)\n# jq      https://github.com/jquery/jquery.git (push)\n# origin  https://github.com/[account]/[repo].git (fetch)\n# origin  https://github.com/[account]/[repo].git (push)",language:"sh"}),r.a.createElement(w.a,{variant:"body1",gutterBottom:!0},"I don't need that anymore"),r.a.createElement(x,{code:"$ git remote remove jq\n# or\n$ git remote rm jq",language:"sh"}),r.a.createElement(w.a,{variant:"body1",gutterBottom:!0},"\u628a\u8a72\u5009\u5eab",r.a.createElement(j,null,"origin"),"\u7684\u9060\u7aef\u8a2d\u5b9a\u6210\u5176\u5b83\u7684\u5730\u65b9"),r.a.createElement(x,{code:"$ git remote set-url origin [new repo]",language:"sh"}),r.a.createElement(w.a,{variant:"body1",gutterBottom:!0},"\u8b93",r.a.createElement(j,null,"origin"),"\u53ea\u6709fetch\u529f\u80fd\uff0c\u4ed6\u7684push\u9060\u7aef\u5beb\u6210\u7121\u6cd5\u8fa8\u8a8dlol\u3002"),r.a.createElement(x,{code:"$ git remote set-url --push origin DISABLED",language:"sh"}))},title:"Remote Url",path:"remote-url"},{component:function(){var e=["$ git reflog","$ git reflog delete HEAD@{3}","$ git log -g",'$ git config --global gc.reflogExpire "7 days"','$ git config --global gc.reflogExpireUnreachable "7 days"','$ git config --local gc.master.reflogExpireUnreachable "14 days"',"$ git reflog expire --expire=now --all","$ git gc"];return r.a.createElement("div",null,r.a.createElement(w.a,{variant:"body1",gutterBottom:!0},"It stores user actions.",r.a.createElement("br",null),["checkout","pull","push","clone","reset","branch","rebase","stash","revert","commit"].map((function(e){return r.a.createElement(j,null,e)}))," are all recognized."),r.a.createElement(x,{code:e[0],language:"sh"}),r.a.createElement(w.a,{variant:"body1",gutterBottom:!0},r.a.createElement(j,null,"HEAD@",0)," means the newest"),r.a.createElement(w.a,{variant:"body1",gutterBottom:!0},"Delete spec record (and it happens to be ",r.a.createElement(j,null,"commit"),")"),r.a.createElement(x,{code:e[1],language:"sh"}),r.a.createElement(w.a,{variant:"body1",gutterBottom:!0},"But it didn't remove commit actually."),r.a.createElement(x,{code:e[2],language:"sh"}),r.a.createElement(w.a,{variant:"body1",gutterBottom:!0},"Delete all records"),r.a.createElement(x,{code:e[6],language:"sh"}),r.a.createElement(w.a,{variant:"body1",gutterBottom:!0},"Remove objects"),r.a.createElement(x,{code:e[7],language:"sh"}))},title:"Reflog",path:"reflog"},{component:function(){var e=["$ git pull","$ git pull --rebase"];return r.a.createElement("div",null,r.a.createElement(w.a,{variant:"body1",gutterBottom:!0},"Do fetch and merge, get news and digest it."),r.a.createElement(x,{code:e[0],language:"sh"}),r.a.createElement(w.a,{variant:"body1",gutterBottom:!0},"merged commit ",r.a.createElement("i",null,"(unnecessary commits just for merging process)")," excepted, merge all remote commits."),r.a.createElement(x,{code:e[1],language:"sh"}))},title:"Pull",path:"pull"},{component:function(){var e=["$ git cherry-pick [commit] -e","$ git cherry-pick [commit] -n"];return r.a.createElement("div",null,r.a.createElement(w.a,{variant:"body1",gutterBottom:!0},"\u76f4\u63a5\u6311\u9078\u8a72\u63d0\u4ea4\uff0c\u6642\u9593commit\u90fd\u662f\u81ea\u5df1\u7576\u4e0b\u5efa\u7acb\u7684"),r.a.createElement(x,{code:"$ git cherry-pick [commit]",language:"sh"}),r.a.createElement(w.a,{variant:"body1",gutterBottom:!0},"\u9664\u4e86\u6cbf\u7528\u539f\u5148\u7684\u63d0\u4ea4\u8a0a\u606f\uff0c\u9806\u4fbf\u52a0\u500b\u8a3b\u89e3\u662f\u5f9e\u54ea\u500b\u5730\u65b9\u4f86\u7684",r.a.createElement(j,null,"(cherry picked from commit [commitId]) after commit message")),r.a.createElement(x,{code:"$ git cherry-pick [commit] -x",language:"sh"}),r.a.createElement(w.a,{variant:"body1",gutterBottom:!0},"\u5728\u63d0\u4ea4\u4e4b\u524d\u6539\u500b\u8a0a\u606f"),r.a.createElement(x,{code:e[2],language:"sh"}),r.a.createElement(w.a,{variant:"body1",gutterBottom:!0},"\u5148\u4e0d\u63d0\u4ea4\uff0c\u5168\u90e8\u653e\u5728\u66ab\u5b58\u5340"),r.a.createElement(x,{code:e[3],language:"sh"}))},title:"Cherry pick",path:"cherry-pick"},{component:function(){var e=["$ git reset HEAD^ --soft","$ git reset HEAD^ --mixed","$ git reset HEAD^ --hard","$ git reset HEAD [file]","$ git reset HEAD^ --hard","$ git reset ORIG_HEAD --hard","$ git checkout HEAD [file]"];return r.a.createElement("div",null,r.a.createElement(w.a,{variant:"h5",gutterBottom:!0},"Now let's suggest we want status back to last commit."),r.a.createElement(w.a,{variant:"body1",gutterBottom:!0},"Tear apart commit,",r.a.createElement("br",null),"Prev committed changes is still on staged",r.a.createElement("br",null),"Keep current status is still staged or untracked."),r.a.createElement(x,{code:e[0],language:"sh"}),r.a.createElement(w.a,{variant:"body1",gutterBottom:!0},"Tear apart commit",r.a.createElement("br",null),"Prev committed changes is moved to untracked",r.a.createElement("br",null),"Keep current status is still staged or untracked."),r.a.createElement(x,{code:e[1],language:"sh"}),r.a.createElement(w.a,{variant:"body1",gutterBottom:!0},"Tear apart commit",r.a.createElement("br",null),"Give up committed changes",r.a.createElement("br",null),"Give up current status which is staged, also the new files",r.a.createElement("br",null),"Untracked new files are still untracked."),r.a.createElement(x,{code:e[2],language:"sh"}),r.a.createElement(w.a,{variant:"body1",gutterBottom:!0},"Spec file staged to be unstaged or untracked"),r.a.createElement(x,{code:e[3],language:"sh"}),r.a.createElement(w.a,{variant:"h5",gutterBottom:!0}," Doing something dangerous"),r.a.createElement(w.a,{variant:"body1",gutterBottom:!0},r.a.createElement(j,null,"ORIG_HEAD")," will store the current sha. ",r.a.createElement("b",null,"Thanks GOD")),r.a.createElement(x,{code:e[4],language:"sh"}),r.a.createElement(w.a,{variant:"body1",gutterBottom:!0},"If we regret, we can get back to the right way."),r.a.createElement(x,{code:e[5],language:"sh"}),r.a.createElement(w.a,{variant:"h5",gutterBottom:!0},"Trick"),r.a.createElement(w.a,{variant:"body1",gutterBottom:!0},"Only restore file whether it's staged or unstaged."),r.a.createElement(x,{code:e[6],language:"sh"}),r.a.createElement(w.a,{variant:"h5"},"staged to unstage"),r.a.createElement(x,{code:"git reset file"}))},title:"Reset",path:"reset"},{component:function(){return r.a.createElement("div",null,r.a.createElement(w.a,{variant:"body1",gutterBottom:!0},"\u8b93GIT\u77e5\u9053\u6709\u522a\u9664\u6a94\u6848\uff0c\u522a\u9664\u672c\u8eab\u4e5f\u662f\u4e00\u7a2e\u6539\u52d5"),r.a.createElement(x,{code:"# git rm = rm  + git add\n$ git rm [file]",language:"sh"}),r.a.createElement(w.a,{variant:"body1",gutterBottom:!0},"Remove folder and let git know"),r.a.createElement(x,{code:"$ git rm -r [folder]",language:"sh"}),r.a.createElement(w.a,{variant:"body1",gutterBottom:!0},"\u82e5\u6a94\u6848\u662f\u65b0\u7684\uff0c\u6539\u52d5\u7d50\u679c\u6703\u662f",r.a.createElement("b",null,"\u672a\u88ab\u8ffd\u8e64",r.a.createElement(j,null,"??"))),r.a.createElement(w.a,{variant:"body1",gutterBottom:!0},"\u5982\u679c\u6a94\u6848\u662f\u5728\u66ab\u5b58\u5340\uff0c\u6539\u52d5\u7d50\u679c\u6703\u662f",r.a.createElement("b",null,"\u66ab\u5b58\u5340\u5448\u73fe\u522a\u9664",r.a.createElement(j,null,"D"),"\uff0b\u672a\u88ab\u8ffd\u8e64",r.a.createElement(j,null,"??")),"\u7684\u96d9\u91cd\u72c0\u614b"),r.a.createElement(x,{code:"$ git rm --cached [filename]",language:"sh"}),r.a.createElement(w.a,{variant:"body1",gutterBottom:!0},"edit the commit prior to committing."),r.a.createElement(x,{code:"$ git rm -r --cached [folder]",language:"sh"}),r.a.createElement(w.a,{variant:"h5",gutterBottom:!0},"Kind of confusing"),r.a.createElement(w.a,{variant:"body1",gutterBottom:!0},"\u5728\u66ab\u5b58\u5340\u7684\u90fd\u7121\u6cd5\u4ee5\u6b64\u522a\u9664 We cannot remove the staged file whether the file is new or not. ",r.a.createElement("b",null,"This failed.")),r.a.createElement(x,{code:"$ git rm [file on staged]",language:"sh"}),r.a.createElement(w.a,{variant:"body1",gutterBottom:!0},"\u4f46\u53ef\u4ee5\u65b0\u589e\u53c3\u6578 ",r.a.createElement(j,null,"-f"),"\u9054\u5230\u4f60\u8981\u7684\u884c\u70ba"),r.a.createElement(x,{code:"$ git rm -f [file on staged]\n$ git sts\n\nD  dir/d.txt\n?? dir/\n$ git ac 'remove'\nOn branch master\nnothing to commit, working tree clean\n",language:"sh"}),r.a.createElement(w.a,{variant:"h5",gutterBottom:!0},r.a.createElement(j,null,"--cached")," on folder?"),r.a.createElement(w.a,{variant:"body1",gutterBottom:!0},"\u4f60\u505a\u7684\u4e8b\u60c5\u662f\u5f92\u52de\u7121\u529f\u7684 Delete the folder but you use ",r.a.createElement(j,null,"--cached")," for keeping the file inside.",r.a.createElement("br",null),"That means do nothing. Here's the result:"),r.a.createElement(x,{code:"$ git rm -r --cached dir/",language:"sh"}),r.a.createElement(w.a,{variant:"body1",gutterBottom:!0},"\u76f4\u63a5\u522a\u9664"),r.a.createElement(x,{code:"$ git rm -r dir/",language:"sh"}),r.a.createElement(w.a,{variant:"h5",gutterBottom:!0},r.a.createElement(j,null,"--cached")," on file?"),r.a.createElement(w.a,{variant:"body1",gutterBottom:!0},"You modified files, and create files, then add all to staged and run this:"),r.a.createElement(x,{code:"git rm -r --cached .",language:"sh"}),r.a.createElement(w.a,{variant:"body1",gutterBottom:!0},"It remove the files,",r.a.createElement("br",null),"New files go to untracked",r.a.createElement("br",null),"Existing files go to ",r.a.createElement(j,null,"D")," and go to untracked",r.a.createElement("br",null),"All the changed was kept and you did in vain."))},title:"Remove",path:"remove"},{component:function(){var e=["$ git rebase [commit] -i\n\n# pick    : pure situation as you think\n# squash  : merge with prev but keep its message\n# fixup   : merge with prev but drop its message\n# drop    : dump it\n# edit    : breaking point here, \n            choose to edit commit message or do something then --continue\n# reword  : breaking point here, edit commit message\n# exec    : ?\n","$ git rebase [prevCommit] -i","$ git rebase --onto [to] [from]","A -> B -> C1 -> D1 -> E1 -> F1(current branch)\n        |\n        C -> D -> E -> F","$ git rebase --onto E C","A -> B -> C -> D -> E -> C1 -> D1 -> E1 -> F1\n                       |\n                       F"];return r.a.createElement("div",null,r.a.createElement(w.a,{variant:"body1",gutterBottom:!0},"Go to vim mode"),r.a.createElement(x,{code:e[0],language:"sh"}),r.a.createElement(w.a,{variant:"body1",gutterBottom:!0},"Drop the current commit that you just mistakenly made! Make it ",r.a.createElement(j,null,"drop")," and ",r.a.createElement(j,null,":wq")),r.a.createElement(x,{code:e[1],language:"sh"}),r.a.createElement(w.a,{variant:"body1",gutterBottom:!0},"Chop source as much as it can."),r.a.createElement(x,{code:e[2],language:"sh"}),r.a.createElement(w.a,{variant:"h6",gutterBottom:!0},"For example:"),r.a.createElement(x,{code:e[3],language:"?"}),r.a.createElement(w.a,{variant:"body1",gutterBottom:!0},"do"),r.a.createElement(x,{code:e[4],language:"?"}),r.a.createElement(w.a,{variant:"body1",gutterBottom:!0},"and it turns out:"),r.a.createElement(x,{code:e[5],language:"?"}))},title:"Rebase",path:"rebase"},{component:function(){var e=["$ git config --list --system",'$ git config --global alias.sts "status -s"',"$ git config --global core.autocrlf true","$ git config --global help.autocorrect 1"];return r.a.createElement("div",null,r.a.createElement(w.a,{variant:"body1",gutterBottom:!0},"Three levels configurations: ",["system","global","local"].map((function(e){return r.a.createElement(j,null,"--".concat(e))}))),r.a.createElement(w.a,{variant:"body1",gutterBottom:!0},"List all system configuration."),r.a.createElement(x,{code:e[0],language:"sh"}),r.a.createElement(w.a,{variant:"body1",gutterBottom:!0},"Saving your time!"),r.a.createElement(x,{code:e[1],language:"sh"}),r.a.createElement(w.a,{variant:"body1",gutterBottom:!0},"You have Windows PC, need to cowork with cross-OS like unix-like, set it ",r.a.createElement(j,null,"true"),". cslf to lf when commit, get file update to local or checkout file will convert any lf file to cslf.",r.a.createElement("br",null),"MacOs or Linux, set it ",r.a.createElement(j,null,"input"),", that means no need to convert to lf since you've already been lf. ",r.a.createElement("br",null),"If the product is 100% sure working on Windows and all your dev tools are based on Windows, you could set it false."),r.a.createElement(x,{code:e[2],language:"sh"}),r.a.createElement(w.a,{variant:"body1",gutterBottom:!0},"Input typo. Git will guess what you want and go run."),r.a.createElement(x,{code:e[3],language:"sh"}))},title:"Config",path:"config"},{component:function(){var e=["$ git stash","$ git stash pop","$ git stash apply",'$ git stash apply "stash@{1}"',"$ git stash drop",'$ git stash drop "stash@{1}"',"$ git stash clear",'$ git stash save "store my draft"',"$ git stash -u ","$ git cat-file -p stash\ntree a2f7156f648755276d1dc67fc6461f39134c93f5\nparent 89d5d8ed1e5aa37ec449abfcc658dee010e6e217\nparent 290d089dbd7b06057e21dc2bb0f53e7b2838380a\nparent fd6e5d7106f52bb4bd77d6d682fa9d9b6435c3e4\nauthor jia0_nn <linao264590000@gmail.com> 1599486115 +0800\ncommitter jia0_nn <linao264590000@gmail.com> 1599486115 +0800","$ git cat-file -p 89d5\ntree 7c1c39c9d488bb828ed79eac9d88a6c5b1c072e5\nparent b065aefc9806fc66a99e8c7f75a73b1541459ced\nauthor jia0_nn <linao264590000@gmail.com> 1599485788 +0800\ncommitter jia0_nn <linao264590000@gmail.com> 1599485788 +0800\n            \nadd and modi","$ git cat-file -p 290d\ntree 7170260ab311d9c16548e0d2b7d5eb9f5b1a9c55\nparent 89d5d8ed1e5aa37ec449abfcc658dee010e6e217\nauthor jia0_nn <linao264590000@gmail.com> 1599486115 +0800\ncommitter jia0_nn <linao264590000@gmail.com> 1599486115 +0800\n            \nindex on master: 89d5d8e add and modi\n","$ git cat-file -p fd6e\ntree 08c56681eceec443b14ad503fa7ebf1c46652c50\nauthor jia0_nn <linao264590000@gmail.com> 1599486115 +0800\ncommitter jia0_nn <linao264590000@gmail.com> 1599486115 +0800\n\nuntracked files on master: 89d5d8e add and modi"];return r.a.createElement("div",null,r.a.createElement(w.a,{variant:"h5",gutterBottom:!0},"Like a draft, and stash is stack"),r.a.createElement(w.a,{variant:"body1",gutterBottom:!0},"Store current working status"),r.a.createElement(x,{code:e[0],language:"sh"}),r.a.createElement(w.a,{variant:"body1",gutterBottom:!0},"Restore the newest draft"),r.a.createElement(x,{code:e[1],language:"sh"}),r.a.createElement(w.a,{variant:"body1",gutterBottom:!0},"Restore the newest draft, but ",r.a.createElement("b",null,"keep it in the list.")),r.a.createElement(x,{code:e[2],language:"sh"}),r.a.createElement(w.a,{variant:"body1",gutterBottom:!0},"Restore the second draft, but ",r.a.createElement("b",null,"keep it in the list.")),r.a.createElement(x,{code:e[3],language:"sh"}),r.a.createElement(w.a,{variant:"body1",gutterBottom:!0},"Give up the first draft (newest)"),r.a.createElement(x,{code:e[4],language:"sh"}),r.a.createElement(w.a,{variant:"body1",gutterBottom:!0},"Give up the second draft"),r.a.createElement(x,{code:e[5],language:"sh"}),r.a.createElement(w.a,{variant:"body1",gutterBottom:!0},"Remove all draft"),r.a.createElement(x,{code:e[6],language:"sh"}),r.a.createElement(w.a,{variant:"body1",gutterBottom:!0},"You can add a note as stash it."),r.a.createElement(x,{code:e[7],language:"sh"}),r.a.createElement(w.a,{variant:"body1",gutterBottom:!0},"Also bundle the files git hasn't recognized yet."),r.a.createElement(x,{code:e[8],language:"sh"}),r.a.createElement(w.a,{variant:"h5",gutterBottom:!0},"Brainstorming"),r.a.createElement(w.a,{variant:"body1",gutterBottom:!0},"Modify ",r.a.createElement(j,null,"a, b"),", remove ",r.a.createElement(j,null,"e, f")," and create ",r.a.createElement(j,null,"x, y"),r.a.createElement("br",null),"Then ",r.a.createElement(j,null,"git add a e x"),"And we use ",r.a.createElement(j,null,"git stash -u")),r.a.createElement(x,{code:e[9],language:"sh"}),r.a.createElement(w.a,{variant:"body1",gutterBottom:!0},"Then check every parent in the stash object. These are ",r.a.createElement("i",null,"last commit"),", ",r.a.createElement("i",null,"index")," and ",r.a.createElement("i",null,"untracked"),", respectively."),r.a.createElement(x,{code:e[10],language:"sh"}),r.a.createElement(x,{code:e[11],language:"sh"}),r.a.createElement(x,{code:e[12],language:"sh"}),r.a.createElement(w.a,{variant:"body1",gutterBottom:!0},"If we store it by using ",r.a.createElement(j,null,"git stash"),", it only gets two parents."),r.a.createElement(w.a,{variant:"body1",gutterBottom:!0},"Continuing ",r.a.createElement(j,null,"git stash -u"),"..."),r.a.createElement(w.a,{variant:"body1",gutterBottom:!0},"Scan ",r.a.createElement(j,null,"git diff HEAD [tree, parent 1-3]"),'. tree means "modified" no matter red or green and "new file on stage" ',r.a.createElement("br",null),"parent1 means HEAD compare to last commit. print nothing",r.a.createElement("br",null),"parent2 means ",r.a.createElement(j,null,"REALLY green status modifed greean and new on stage"),".",r.a.createElement("br",null),"parent3 means ",r.a.createElement(j,null,"except untracked files, exsting will be red, new will be green, it will show red abc and green y"),".",r.a.createElement("br",null)))},title:"Stash",path:"stash"},{component:function(){return r.a.createElement("div",null,r.a.createElement(w.a,{variant:"body1",gutterBottom:!0},"\u76ee\u524d\u72c0\u6cc1\uff0c\u4fee\u6539ab\u3001\u522a\u9664ef\u3001\u65b0\u589exy\uff0c\u4e26\u4e14\u8b93aex\u653e\u5230\u66ab\u5b58\u5340(GREEN)\u3002",r.a.createElement("br",null),"\u6700\u5f8c\u63d0\u4ea4\u662f\u65b0\u589eefg\u4e5f\u5c31\u662fHEAD \u5148\u5c07\uff28EAD\u60f3\u7c21\u55ae\u4e00\u9ede\uff0c\u5b83\u5c31\u662f\u525b\u525b\u7684\u6700\u5f8c\u63d0\u4ea4\uff0c\u6211\u5011\u4e5f\u6c92\u6709\u63db\u5206\u652f\uff0cHEAD\u662f\u6211\u5011\u540c\u652f\u3002"),r.a.createElement(x,{code:'\n$ git s\nOn branch master\nChanges to be committed:\n    (use "git restore --staged <file>..." to unstage)\n    modified:   a\n    deleted:    e\n    new file:   x\n\nChanges not staged for commit:\n    (use "git add/rm <file>..." to update what will be committed)\n    (use "git restore <file>..." to discard changes in working directory)\n    modified:   b\n    deleted:    f\n\nUntracked files:\n    (use "git add <file>..." to include in what will be committed)\n    y\n',language:"sh"}),r.a.createElement(w.a,{variant:"body1",gutterBottom:!0},"\u67e5\u770b\u8207\u76ee\u524d\u6700\u65b0\u63d0\u4ea4\u7684\u4e0d\u540c\uff1a\u66ab\u5b58\u5340 \uff0b \u5de5\u4f5c\u76ee\u9304 \u5c0d\u65bc\u525b\u65b0\u589e\u7684xy\uff0cGIT\u53ea\u8a8d\u5f97\u88ab\u653e\u5230\u5de5\u4f5c\u76ee\u9304\u7684x\u3002 \u7d50\u679c\u70baa, b, e, f, x."),r.a.createElement(x,{code:"$ git diff HEAD",language:"sh"}),r.a.createElement(w.a,{variant:"body1",gutterBottom:!0},"GIT\u7684HEAD\u5c31\u662f\u65b0\u589eefg\uff0c\u5c0d\u65bcHEAD^\u4f86\u8aaaefg\u672c\u4f86\u5c31\u4e0d\u5b58\u5728",r.a.createElement("br",null),"\u73fe\u5728\u6211\u5011\u5728\u522a\u9664ef\uff0c\u5c0dHEAD^\u4f86\u8aaa\u4ed6\u672c\u4f86\u5c31\u4e0d\u77e5\u9053\u6709ef\u3002",r.a.createElement("br",null),"\u4f46g\u5c0dHEAD^\u4f86\u8aaa\u662f\u65b0\u7684\u6771\u897f\u6240\u4ee5\u6709\u5b83\u3002",r.a.createElement("br",null),"\u800cx\u56e0\u70ba\u653e\u5728\u5de5\u4f5c\u76ee\u9304\u4e0a\uff0c\u6240\u4ee5HEAD^\u4e5f\u8a8d\u70ba\u662f\u65b0\u7684\u3002 \u7d50\u679c\u70ba a, b, g, x"),r.a.createElement(x,{code:"$ git diff HEAD^",language:"sh"}),r.a.createElement(w.a,{variant:"body1",gutterBottom:!0},"\u55ae\u7d14\u7121\u53c3\u6578\u4ee3\u8868\u4e0d\u8ddf\u904e\u53bb\u6bd4\u8f03\uff0c\u53ea\u6bd4\u5c0d\u66ab\u5b58\u5340\u8207\u5de5\u4f5c\u76ee\u9304",r.a.createElement("br",null),"aef\u90fd\u5728\u66ab\u5b58\u5340\uff0c\u53ea\u6709bf\u5728\u5de5\u4f5c\u76ee\u9304\uff0c\u800cy\u6839\u672c\u9084\u4e0d\u88abGIT\u77e5\u9053",r.a.createElement("br",null),"\u53c8\u53ef\u4ee5\u7576\u4f5c\u8981\u52a0\u5230\u66ab\u5b58\u5340(GREEN)\u4e4b\u524d\u7684\u6aa2\u67e5\uff5e"),r.a.createElement(x,{code:"$ git diff\n$ git diff . .",language:"sh"}),r.a.createElement(w.a,{variant:"body1",gutterBottom:!0},"HEAD\u505a\u4e86\u4ec0\u9ebc\uff1f\u5167\u5bb9\u7b49\u65bc",r.a.createElement(j,null,"git show"),"\b\u6e1b\u53bb\u8a72\u63d0\u4ea4metadata"),r.a.createElement(x,{code:"$ git diff HEAD^ HEAD\n$ git show ",language:"sh"}),r.a.createElement(w.a,{variant:"body1",gutterBottom:!0},r.a.createElement(j,null,"581b"),"\u505a\u4e86\u4ec0\u9ebc\uff1f"),r.a.createElement(x,{code:"$ git diff 581b^ 581b\n$ git show 581b",language:"sh"}),r.a.createElement(w.a,{variant:"body1",gutterBottom:!0},"\u66ab\u5b58\u5340\u7684\u8207HEAD\u5dee\u7570",r.a.createElement("br",null),"\u7d50\u679c\u70ba a, e, x"),r.a.createElement(x,{code:"$ git diff --cached HEAD\n$ git diff --staged\n$ git diff --cached",language:"sh"}),r.a.createElement(w.a,{variant:"body1",gutterBottom:!0},"\u66ab\u5b58\u5340\u7684\u8207HEAD^\u5dee\u7570",r.a.createElement("br",null),"e\u522a\u9664\u88ab\u52a0\u9032\u53bb\u66ab\u5b58\u5340\uff0c\u5c0dHEAD^\u4f86\u8aaa\u672c\u4f86\u5c31\u6c92\u6709\u9019\u500b\u6a94\u6848\uff0c\u6240\u4ee5\u6c92\u5dee\u3002",r.a.createElement("br",null),"fg\u5c0dHEAD^\u4f86\u8aaa\u662f\u65b0\u6a94\u6848\u3002",r.a.createElement("br",null),"\u7d50\u679c\u70ba a, f, g, x"),r.a.createElement(x,{code:"$ git diff --staged HEAD^",language:"sh"}))},title:"Diff",path:"diff"}],H=a(188),T=a(189),N=a(191),R=a(190),C=Object(H.a)((function(e){return{root:{display:"grid",gridTemplateColumns:"1fr 4fr",boxShadow:"1px 1px 4px 0px rgba(0,0,0,0.2)",marginTop:"24px"},list:{width:"100%",backgroundColor:e.palette.background.paper,height:"70vh",overflowY:"scroll",boxShadow:"1px 1px 4px 0px rgba(0,0,0,0.2)"},render:{maxHeight:"70vh",overflowY:"scroll",background:"#ffffff",padding:"24px"}}}));var I=function(){var e=Object(n.useState)(null),t=Object(c.a)(e,2),a=t[0],l=t[1],o=C();return r.a.createElement("div",{className:o.root},r.a.createElement(g.a,null,r.a.createElement("title",null,"Git snippet"),r.a.createElement("script",{src:"https://cdnjs.cloudflare.com/ajax/libs/prism/1.21.0/prism.min.js",integrity:"sha512-WkVkkoB31AoI9DAk6SEEEyacH9etQXKUov4JRRuM1Y681VsTq7jYgrRw06cbP6Io7kPsKx+tLFpH/HXZSZ2YEQ==",crossorigin:"anonymous"})),r.a.createElement(T.a,{className:o.list},A.map((function(e){return r.a.createElement(N.a,{button:!0,className:o.card,onClick:function(){return t=e.component,void l(t());var t}},r.a.createElement(R.a,{primary:e.title}))}))),r.a.createElement("div",{className:o.render},a||"NOTHING"))},G=a(26),O=a(5);var q=function(){return r.a.createElement("div",{className:"tech-articles"},r.a.createElement("div",{className:"article-category"},r.a.createElement(G.b,{to:"/randomlymurmur",activeClassName:"current-category"},r.a.createElement(s.a,{size:"large"},"Randomly MurMur..")),r.a.createElement(G.b,{to:"/git",activeClassName:"current-category"},r.a.createElement(s.a,{size:"large"},"Git"))),r.a.createElement(O.c,null,r.a.createElement(O.a,{path:"/randomlymurmur"},r.a.createElement($,null)),r.a.createElement(O.a,{path:"/git"},r.a.createElement(I,null))))};Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));o.a.render(r.a.createElement(G.a,{basename:"/tech-articles"},r.a.createElement(r.a.StrictMode,null,r.a.createElement(q,null))),document.getElementById("tech-article-root")),"serviceWorker"in navigator&&navigator.serviceWorker.ready.then((function(e){e.unregister()})).catch((function(e){console.error(e.message)}))},61:function(e,t,a){e.exports=a.p+"static/media/murmur1.230ff83d.md"},62:function(e,t,a){e.exports=a.p+"static/media/murmur2.b0db7e42.md"},63:function(e,t,a){e.exports=a.p+"static/media/murmur3.2020d910.md"},72:function(e,t,a){e.exports=a(169)},77:function(e,t,a){},78:function(e,t,a){}},[[72,1,2]]]);
//# sourceMappingURL=main.888c3012.chunk.js.map