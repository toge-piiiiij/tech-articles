{"version":3,"sources":["articles/randomly-murmur/mds/index.js","articles/randomly-murmur/index.js","components/PrismCode.js","components/InlineCode.js","articles/git/posts/diff.js","articles/git/posts/index.js","articles/git/posts/create-tag.js","articles/git/posts/delete-tag.js","articles/git/posts/remote-url.js","articles/git/posts/reflog.js","articles/git/posts/pull.js","articles/git/posts/cherry-pick.js","articles/git/posts/reset.js","articles/git/posts/remove.js","articles/git/posts/rebase.js","articles/git/posts/config.js","articles/git/posts/stash.js","articles/git/index.js","App.js","serviceWorker.js","index.js","articles/randomly-murmur/mds/murmur1.md","articles/randomly-murmur/mds/murmur2.md","articles/randomly-murmur/mds/murmur3.md"],"names":["component","RandomlyMurmur1","RandomlyMurmur2","RandomlyMurmur3","emojiSupport","text","value","replace","name","emoji","getUnicode","AngularArticles","useState","md","setMd","Helmet","className","Button","variant","size","color","onClick","post","posts","Math","floor","random","length","fetch","then","res","source","renderers","PrismCode","code","language","codeBlock","useRef","useEffect","highlight","Prism","highlightElement","current","ref","trim","InlineCode","children","Diff","gits","Typography","gutterBottom","title","path","map","a","l","useStyles","makeStyles","theme","root","display","boxShadow","marginTop","list","width","backgroundColor","palette","background","paper","height","overflowY","flex","render","maxHeight","padding","resizer","cursor","alignItems","Gits","Post","setPost","classes","leftEle","useEventCallback","event$","inputs$","pipe","withLatestFrom","switchMap","event","console","log","leftStyle","getComputedStyle","width0","parseFloat","getPropertyValue","startX","clientX","fromEvent","window","moveEvent","takeUntil","onMouseDown","leftX","flexBasis","max","flexGrow","flexShrink","src","integrity","crossorigin","List","style","Posts","ListItem","button","card","c","ListItemText","primary","App","to","activeClassName","Boolean","location","hostname","match","ReactDOM","basename","process","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.f890c0ab.chunk.js","sourcesContent":["import RandomlyMurmur1 from \"./murmur1.md\";\nimport RandomlyMurmur2 from \"./murmur2.md\";\nimport RandomlyMurmur3 from \"./murmur3.md\";\n\nexport default [\n    { component: RandomlyMurmur1, },\n    { component: RandomlyMurmur2, },\n    { component: RandomlyMurmur3, },\n]","import React, { useState } from 'react'\nimport ReactMarkdown from 'react-markdown'\nimport { Helmet } from \"react-helmet\";\nimport emoji from 'emoji-dictionary'\nimport { Button } from '@material-ui/core'\n\nimport posts from \"./mds\";\nimport './index.css'\nconst emojiSupport = text => text.value.replace(/:\\w+:/gi, name => emoji.getUnicode(name))\n\nfunction AngularArticles() {\n  const [md, setMd] = useState('')\n  const handleSelectArticle = () => {\n    const post = posts[Math.floor(Math.random() * Math.floor(posts.length))]\n    fetch(post.component).then(res => res.text()).then(text => {\n      setMd(text)\n    })\n  }\n\n  return (\n    <>\n      <Helmet>\n        <title>MurMuring .....</title>\n      </Helmet>\n      <div className=\"randomly-murmur\">\n        <Button\n          className=\"randomly-click\"\n          variant=\"contained\"\n          size=\"large\"\n          color=\"primary\"\n          onClick={handleSelectArticle}>\n          Click me to see random post\n        </Button>\n        <ReactMarkdown source={md} renderers={{ text: emojiSupport }} />\n      </div>\n    </>\n  );\n}\n\nexport default AngularArticles;","import React, { useRef, useEffect } from \"react\"\nimport Prism from \"prismjs\"\n\n\nfunction PrismCode({ code, language }) {\n    const codeBlock = useRef(null)\n\n    useEffect(() => {\n        highlight()\n    })\n\n    const highlight = () => {\n        Prism.highlightElement(codeBlock.current)\n    }\n    return (\n        <pre >\n            <code ref={codeBlock} className={`language-${language}`}>\n                {code.trim()}\n            </code>\n        </pre>\n    )\n}\nexport default PrismCode;","import React, { useRef, useEffect } from \"react\"\nimport Prism from \"prismjs\"\n\n\nfunction InlineCode({ language, children }) {\n    const codeBlock = useRef(null)\n\n    useEffect(() => {\n        highlight()\n    })\n\n    const highlight = () => {\n        Prism.highlightElement(codeBlock.current)\n    }\n    return (\n        <code ref={codeBlock} className={`language-${language}`}>\n            {children}\n        </code>\n    )\n}\nexport default InlineCode;","import React from 'react'\nimport Typography from '@material-ui/core/Typography';\nimport PrismCode from '../../../components/PrismCode'\nimport InlineCode from '../../../components/InlineCode';\n\n/* \n    staged: 泛指暫存區 (green)，可以選擇將unstaged or untracked放進來\n    unstaged: 工作目錄  (red)\n    untracked: git還不知道 (red)\n\n*/\n\nfunction Diff() {\n    const si = `\n$ git s\nOn branch master\nChanges to be committed:\n    (use \"git restore --staged <file>...\" to unstage)\n    modified:   a\n    deleted:    e\n    new file:   x\n\nChanges not staged for commit:\n    (use \"git add/rm <file>...\" to update what will be committed)\n    (use \"git restore <file>...\" to discard changes in working directory)\n    modified:   b\n    deleted:    f\n\nUntracked files:\n    (use \"git add <file>...\" to include in what will be committed)\n    y\n`\n    return (\n        <div>\n            <Typography variant=\"body1\" gutterBottom>\n                {/* \n                    untracked(new and not add)\n                    tracked files(staged or unstaged)\n                */}\n                目前狀況，修改ab、刪除ef、新增xy，並且讓aex放到暫存區(GREEN)。<br></br>\n                最後提交是新增efg也就是HEAD\n                先將ＨEAD想簡單一點，它就是剛剛的最後提交，我們也沒有換分支，HEAD是我們同支。\n            </Typography>\n            <PrismCode code={si} language=\"sh\" />\n\n\n            <Typography variant=\"body1\" gutterBottom>\n                查看與目前最新提交的不同：暫存區 ＋ 工作目錄\n                對於剛新增的xy，GIT只認得被放到工作目錄的x。\n                結果為a, b, e, f, x.\n            </Typography>\n            <PrismCode code={`$ git diff HEAD`} language=\"sh\" />\n\n\n            <Typography variant=\"body1\" gutterBottom>\n                GIT的HEAD就是新增efg，對於HEAD^來說efg本來就不存在<br></br>\n                現在我們在刪除ef，對HEAD^來說他本來就不知道有ef。<br></br>\n                但g對HEAD^來說是新的東西所以有它。<br></br>\n                而x因為放在工作目錄上，所以HEAD^也認為是新的。\n                結果為 a, b, g, x\n            </Typography>\n            <PrismCode code={`$ git diff HEAD^`} language=\"sh\" />\n\n\n            <Typography variant=\"body1\" gutterBottom>\n                單純無參數代表不跟過去比較，只比對暫存區與工作目錄<br></br>\n                aef都在暫存區，只有bf在工作目錄，而y根本還不被GIT知道<br></br>\n                又可以當作要加到暫存區(GREEN)之前的檢查～\n            </Typography>\n            <PrismCode code={`$ git diff\\n$ git diff . .`} language=\"sh\" />\n\n\n\n\n            <Typography variant=\"body1\" gutterBottom>\n                HEAD做了什麼？內容等於<InlineCode>git show</InlineCode>\b減去該提交metadata\n            </Typography>\n            <PrismCode code={`$ git diff HEAD^ HEAD\\n$ git show `} language=\"sh\" />\n\n\n            <Typography variant=\"body1\" gutterBottom>\n                <InlineCode>581b</InlineCode>做了什麼？\n            </Typography>\n            <PrismCode code={`$ git diff 581b^ 581b\\n$ git show 581b`} language=\"sh\" />\n\n\n\n\n            <Typography variant=\"body1\" gutterBottom>\n                暫存區的與HEAD差異<br></br>\n                結果為 a, e, x\n            </Typography>\n            <PrismCode code={`$ git diff --cached HEAD\\n$ git diff --staged\\n$ git diff --cached`} language=\"sh\" />\n\n\n\n            <Typography variant=\"body1\" gutterBottom>\n                暫存區的與HEAD^差異<br></br>\n                e刪除被加進去暫存區，對HEAD^來說本來就沒有這個檔案，所以沒差。<br></br>\n                fg對HEAD^來說是新檔案。<br></br>\n                結果為 a, f, g, x\n            </Typography>\n            <PrismCode code={`$ git diff --staged HEAD^`} language=\"sh\" />\n\n        </div>\n    );\n}\n\nexport default Diff;","import CreateTag from \"./create-tag\";\nimport DeleteTag from \"./delete-tag\";\nimport RemoteUrl from \"./remote-url\";\nimport Pull from \"./pull\";\nimport CherryPick from \"./cherry-pick\";\nimport Rebase from \"./rebase\";\nimport Reset from \"./reset\";\nimport Remove from \"./remove\";\nimport Reflog from \"./reflog\";\nimport Config from \"./config\";\nimport Stash from \"./stash\";\nimport Diff from \"./diff\";\n\nexport default [\n    { component: CreateTag, title: 'Create Tag', path: 'create-tag' },\n    { component: DeleteTag, title: 'Delete Tag', path: 'delete-tag' },\n    { component: RemoteUrl, title: 'Remote Url', path: 'remote-url' },\n    { component: Reflog, title: 'Reflog', path: 'reflog' },\n    { component: Pull, title: 'Pull', path: 'pull' },\n    { component: CherryPick, title: 'Cherry pick', path: 'cherry-pick' },\n    { component: Reset, title: 'Reset', path: 'reset' },\n    { component: Remove, title: 'Remove', path: 'remove' },\n    { component: Rebase, title: 'Rebase', path: 'rebase' },\n    { component: Config, title: 'Config', path: 'config' },\n    { component: Stash, title: 'Stash', path: 'stash' },\n    { component: Diff, title: 'Diff', path: 'diff' },\n]","import React from 'react'\nimport Typography from '@material-ui/core/Typography';\nimport PrismCode from '../../../components/PrismCode'\nimport InlineCode from '../../../components/InlineCode'\n\nfunction CreateTag() {\n    const gits = \n    [\n        '$ git tag temp-apple',\n        \n        `$ git cat-file -p temp-apple\\n\n# tree b2b161aefc2b86809ad8e2d7d16db45768ceda31\n# parent e20b06ad080192dbf775d980ca517365bdf197a9\n# author toge-piiiiij <jia0.togepiii@gmail.com> 1599195339 +0800\n# committer toge-piiiiij <jia0.togepiii@gmail.com> 1599195339 +0800`,\n        \n        `# same as git rev-parse HEAD\n$ git rev-parse temp-apple\n# 750d2b113551ef2d8de397687f34600a7918d84c`,\n        \n        `$ git tag second-temp-apple -a -m 'This is second tag with message'`,\n        \n        `$ git cat-file -p second-temp-apple\n# object 750d2b113551ef2d8de397687f34600a7918d84c\n# type commit\n# tag second-temp-apple\n# tagger toge-piiiiij <jia0.togepiii@gmail.com> 1599279159 +0800\n\nThis is second tag with message`,\n        \n        `$ git rev-parse second-temp-apple\n1dbef0603debff29c5f2f3cce52a2605548dc85d`,\n\n    '$ git push --tags',\n    '$ git push origin temp-apple',\n\n    ]\n    return (\n        <div>\n        <Typography variant=\"h6\" gutterBottom>\n            Unannotated tag also normal & lightweight.\n        </Typography>\n        <PrismCode code={gits[0]} language=\"sh\" />\n\n        <Typography variant=\"body1\" gutterBottom>\n           看這個tag的資訊，跟用<InlineCode>git cat-file -p [commitID]</InlineCode>的資訊欄位一模一樣\n        </Typography>\n        <PrismCode code={gits[1]} language=\"sh\" />\n\n        <Typography variant=\"body1\" gutterBottom>\n            承上，用這個去拿真正的物件，發現它的值就是該tag標在的commit值。\n        </Typography>\n        <PrismCode code={gits[2]} language=\"sh\" />\n\n        <Typography variant=\"h6\" gutterBottom>\n            Annotated tag\n        </Typography>\n        <PrismCode code={gits[3]} language=\"sh\" />\n\n        <Typography variant=\"body1\">\n            跟剛剛看和unannotated的資料欄位都不同\n        </Typography>\n        <PrismCode code={gits[4]} language=\"sh\" />\n\n        <Typography variant=\"body1\">\n            和unannotated印出來的不同：這是他自己的commit\n        </Typography>\n        <PrismCode code={gits[5]} language=\"sh\" />\n\n        <Typography variant=\"body1\" gutterBottom>\n            <InlineCode>git show</InlineCode> for display annotated tag.\n        </Typography>\n        <Typography variant=\"body1\" gutterBottom>\n            \n        </Typography>\n\n\n        <Typography variant=\"h1\" gutterBottom/>\n\n\n        <Typography variant=\"h6\" gutterBottom>\n            同步所有tag到遠端\n        </Typography>\n        <PrismCode code={gits[6]} language=\"sh\" />\n\n\n        <Typography variant=\"body1\" gutterBottom>\n            或是push特定的tag\n        </Typography>\n        <PrismCode code={gits[7]} language=\"sh\" />\n\n\n    </div>\n    );\n}\n\nexport default CreateTag;","import React from 'react'\nimport Typography from '@material-ui/core/Typography';\nimport PrismCode from '../../../components/PrismCode'\n\n\nfunction DeleteTag() {\n    const gits = \n        [\n            '$ git tag -d [tagName]', \n            `# All are the same\\n$ git push -d origin [tagName]\\n$ git push origin :[tagName]\\n$ git push origin :refs/tags/[tagName]\\n`\n        ]\n    return (\n        <div>\n            <Typography variant=\"body1\" gutterBottom>\n                刪除本地tag\n            </Typography>\n            <PrismCode code={gits[0]} language=\"sh\" />\n            <Typography variant=\"body1\" gutterBottom>\n                刪除遠端tag\n            </Typography>\n            <PrismCode code={gits[1]} language=\"sh\" />\n        </div>\n    );\n}\n\nexport default DeleteTag;","import React from 'react'\nimport Typography from '@material-ui/core/Typography';\nimport PrismCode from '../../../components/PrismCode'\nimport InlineCode from '../../../components/InlineCode';\n\n\nfunction RemoteUrl() {\n    return (\n        <div>\n            <Typography variant=\"body1\" gutterBottom>\n                新增一個叫做jq的遠端倉庫地址<InlineCode>origin</InlineCode>\n            </Typography>\n            <PrismCode code={`$ git remote add jq https://github.com/jquery/jquery.git`} language=\"sh\" />\n\n            <Typography variant=\"body1\" gutterBottom>\n                列出倉庫與用途\n            </Typography>\n            <PrismCode code={`$ git remote -v\n# jq      https://github.com/jquery/jquery.git (fetch)\n# jq      https://github.com/jquery/jquery.git (push)\n# origin  https://github.com/[account]/[repo].git (fetch)\n# origin  https://github.com/[account]/[repo].git (push)`} language=\"sh\" />\n\n            <Typography variant=\"body1\" gutterBottom>\n                我不要這個倉庫了\n            </Typography>\n            <PrismCode code={`$ git remote remove jq\n# or\n$ git remote rm jq`} language=\"sh\" />\n\n            <Typography variant=\"body1\" gutterBottom>\n                把該倉庫<InlineCode>origin</InlineCode>的遠端設定成其它的地方\n            </Typography>\n            <PrismCode code={`$ git remote set-url origin [new repo]`} language=\"sh\" />\n\n            <Typography variant=\"body1\" gutterBottom>\n                讓<InlineCode>origin</InlineCode>只有fetch功能，他的push遠端寫成無法辨認lol。\n            </Typography>\n            <PrismCode code={`$ git remote set-url --push origin DISABLED`} language=\"sh\" />\n\n\n        </div>\n    );\n}\n\nexport default RemoteUrl;","import React from 'react'\nimport Typography from '@material-ui/core/Typography';\nimport PrismCode from '../../../components/PrismCode'\nimport InlineCode from '../../../components/InlineCode';\n\nfunction Reflog() {\n    const gits =\n        [\n            '$ git reflog',\n            '$ git reflog delete HEAD@{3}',\n            '$ git log -g',\n            '$ git config --global gc.reflogExpire \"7 days\"',\n            '$ git config --global gc.reflogExpireUnreachable \"7 days\"',\n            '$ git config --local gc.master.reflogExpireUnreachable \"14 days\"',\n            '$ git reflog expire --expire=now --all',\n            '$ git gc',\n        ]\n    const recognizedActions = ['checkout', 'pull', 'push', 'clone', 'reset', \n                                'branch', 'rebase', 'stash', 'revert', 'commit']\n    return (\n        <div>\n            <Typography variant=\"body1\" gutterBottom>\n                這些行為都是一種紀錄：<br/>\n                {recognizedActions.map(a => <InlineCode>{a}</InlineCode>)} are all recognized.\n            </Typography>\n            <PrismCode code={gits[0]} language=\"sh\" />\n\n\n            <Typography variant=\"body1\" gutterBottom>\n                <InlineCode>HEAD@{0}</InlineCode>代表是最近一次行為\n            </Typography>\n\n\n            <Typography variant=\"body1\" gutterBottom>\n                刪除特定的紀錄，假設剛好是屬於commit的紀錄，這樣並不會真的去移除該commit\n            </Typography>\n            <PrismCode code={gits[1]} language=\"sh\" />\n\n\n            <Typography variant=\"body1\" gutterBottom>\n               用<InlineCode>git log</InlineCode>格式去顯示reflog\n            </Typography>\n            <PrismCode code={gits[2]} language=\"sh\" />\n\n            <Typography variant=\"body1\" gutterBottom>\n                刪除所有行為記錄\n            </Typography>\n            <PrismCode code={gits[6]} language=\"sh\" />\n\n            <Typography variant=\"body1\" gutterBottom>\n                移除實際上對應的物件檔案\n            </Typography>\n            <PrismCode code={gits[7]} language=\"sh\" />\n        </div>\n    );\n}\n\nexport default Reflog;","import React from 'react'\nimport Typography from '@material-ui/core/Typography';\nimport PrismCode from '../../../components/PrismCode'\nimport InlineCode from '../../../components/InlineCode';\n\n\nfunction Pull() {\n    const gits = \n        [\n            '$ git pull',\n            '$ git pull --rebase',\n        ]\n    return (\n        <div>\n            <Typography variant=\"body1\" gutterBottom>\n                \b等同於<InlineCode>fetch</InlineCode>加上<InlineCode>merge</InlineCode>\n                Do fetch and merge, get news and digest it. \n            </Typography>\n            <PrismCode code={gits[0]} language=\"sh\" />\n            <Typography variant=\"body1\" gutterBottom>\n                對於遠端來說，merge也算一個commit，所以現在我要merge遠端但不要merged形式的commit\n            </Typography>\n            <PrismCode code={gits[1]} language=\"sh\" />\n        </div>\n    );\n}\n\nexport default Pull;","import React from 'react'\nimport Typography from '@material-ui/core/Typography';\nimport PrismCode from '../../../components/PrismCode'\nimport InlineCode from '../../../components/InlineCode';\n\n\nfunction CherryPick() {\n    return (\n        <div>\n            <Typography variant=\"body1\" gutterBottom>\n                直接挑選該提交，時間commit都是自己當下建立的\n            </Typography>\n            <PrismCode code={`$ git cherry-pick [commit]`} language=\"sh\" />\n\n            <Typography variant=\"body1\" gutterBottom>\n                除了沿用原先的提交訊息，順便加個註解是從哪個地方來的\n                <InlineCode>(cherry picked from commit [commitId]) after commit message</InlineCode>\n            </Typography>\n            <PrismCode code={'$ git cherry-pick [commit] -x'} language=\"sh\" />\n\n            <Typography variant=\"body1\" gutterBottom>\n                在提交之前改個訊息\n            </Typography>\n            <PrismCode code={'$ git cherry-pick [commit] -e'} language=\"sh\" />\n\n            <Typography variant=\"body1\" gutterBottom>\n                先不提交，全部放在暫存區\n            </Typography>\n            <PrismCode code={'$ git cherry-pick [commit] -n'} language=\"sh\" />\n        </div>\n    );\n}\n\nexport default CherryPick;","import React from 'react'\nimport Typography from '@material-ui/core/Typography';\nimport PrismCode from '../../../components/PrismCode'\nimport InlineCode from '../../../components/InlineCode';\n\n\nfunction Reset() {\n    const gits =\n        [\n            `$ git reset HEAD^ --soft`,\n            `$ git reset HEAD^ --mixed`,\n            `$ git reset HEAD^ --hard`,\n            '$ git reset HEAD [file]',\n            '$ git reset HEAD^ --hard',\n            '$ git reset ORIG_HEAD --hard',\n            '$ git checkout HEAD [file]',\n        ]\n    return (\n        <div>\n            <Typography variant=\"h5\" gutterBottom>\n                Now let's suggest we want status back to last commit.\n            </Typography>\n\n            <Typography variant=\"body1\" gutterBottom>\n                Tear apart commit,<br></br>\n                Prev committed changes is still on staged<br></br>\n                Keep current status is still staged or untracked.\n            </Typography>\n            <PrismCode code={gits[0]} language=\"sh\" />\n\n            <Typography variant=\"body1\" gutterBottom>\n                Tear apart commit<br></br>\n                Prev committed changes is moved to untracked<br></br>\n                Keep current status is still staged or untracked.\n            </Typography>\n            <PrismCode code={gits[1]} language=\"sh\" />\n\n            <Typography variant=\"body1\" gutterBottom>\n                Tear apart commit<br></br>\n                Give up committed changes<br></br>\n                Give up current status which is staged, also the new files<br></br>\n                Untracked new files are still untracked.\n            </Typography>\n            <PrismCode code={gits[2]} language=\"sh\" />\n\n\n            <Typography variant=\"body1\" gutterBottom>\n                Spec file staged to be unstaged or untracked\n            </Typography>\n            <PrismCode code={gits[3]} language=\"sh\" />\n\n            <Typography variant=\"h5\" gutterBottom> Doing something dangerous</Typography>\n            <Typography variant=\"body1\" gutterBottom>\n                <InlineCode>ORIG_HEAD</InlineCode> will store the current sha. <b>Thanks GOD</b>\n            </Typography>\n            <PrismCode code={gits[4]} language=\"sh\" />\n\n\n            <Typography variant=\"body1\" gutterBottom>\n                If we regret, we can get back to the right way.\n            </Typography>\n            <PrismCode code={gits[5]} language=\"sh\" />\n\n\n            <Typography variant=\"h5\" gutterBottom>Trick</Typography>\n            <Typography variant=\"body1\" gutterBottom>\n                Only restore file whether it's staged or unstaged.\n            </Typography>\n            <PrismCode code={gits[6]} language=\"sh\" />\n\n\n\n\n            <Typography variant=\"h5\">staged to unstage</Typography>\n            <PrismCode code={`git reset file`}></PrismCode>\n        </div>\n    );\n}\n\nexport default Reset;","import React from 'react'\nimport Typography from '@material-ui/core/Typography';\nimport PrismCode from '../../../components/PrismCode'\nimport InlineCode from '../../../components/InlineCode';\n\n\nfunction Remove() {\n    return (\n        <div>\n            <Typography variant=\"body1\" gutterBottom>\n                讓GIT知道有刪除檔案，刪除本身也是一種改動\n            </Typography>\n            <PrismCode code={`# git rm = rm  + git add\\n$ git rm [file]`} language=\"sh\" />\n\n            <Typography variant=\"body1\" gutterBottom>\n                Remove folder and let git know\n            </Typography>\n            <PrismCode code={'$ git rm -r [folder]'} language=\"sh\" />\n\n            <Typography variant=\"body1\" gutterBottom>\n                若檔案是新的，改動結果會是<b>未被追蹤<InlineCode>??</InlineCode></b>\n            </Typography>\n            <Typography variant=\"body1\" gutterBottom>\n                如果檔案是在暫存區，改動結果會是<b>暫存區呈現刪除<InlineCode>D</InlineCode>＋未被追蹤<InlineCode>??</InlineCode></b>的雙重狀態\n            </Typography>\n            <PrismCode code={'$ git rm --cached [filename]'} language=\"sh\" />\n\n            <Typography variant=\"body1\" gutterBottom>\n                edit the commit prior to committing.\n            </Typography>\n            <PrismCode code={`$ git rm -r --cached [folder]`} language=\"sh\" />\n\n            <Typography variant=\"h5\" gutterBottom>Kind of confusing</Typography>\n\n            <Typography variant=\"body1\" gutterBottom>\n                在暫存區的都無法以此刪除\n                We cannot remove the staged file whether the file is new or not. <b>This failed.</b>\n            </Typography>\n            <PrismCode code={`$ git rm [file on staged]`} language=\"sh\" />\n            <Typography variant=\"body1\" gutterBottom>\n                但可以新增參數 <InlineCode>-f</InlineCode>達到你要的行為\n            </Typography>\n            <PrismCode code={`$ git rm -f [file on staged]\\n$ git sts\\n\nD  dir/d.txt\\n?? dir/\\n$ git ac 'remove'\\nOn branch master\\nnothing to commit, working tree clean\\n`} language=\"sh\" />\n\n            <Typography variant=\"h5\" gutterBottom><InlineCode>--cached</InlineCode> on folder?</Typography>\n\n            <Typography variant=\"body1\" gutterBottom>\n                你做的事情是徒勞無功的\n                Delete the folder but you use <InlineCode>--cached</InlineCode> for keeping the file inside.<br></br>\n                That means do nothing. Here's the result:\n            </Typography>\n            <PrismCode code={`$ git rm -r --cached dir/`} language=\"sh\" />\n\n\n            <Typography variant=\"body1\" gutterBottom>\n                直接刪除\n            </Typography>\n            <PrismCode code={`$ git rm -r dir/`} language=\"sh\" />\n\n\n            <Typography variant=\"h5\" gutterBottom><InlineCode>--cached</InlineCode> on file?</Typography>\n\n            <Typography variant=\"body1\" gutterBottom>\n                You modified files, and create files, then add all to staged and run this:\n            </Typography>\n            <PrismCode code={`git rm -r --cached .`} language=\"sh\" />\n\n\n\n            <Typography variant=\"body1\" gutterBottom>\n                It remove the files,<br></br>\n                New files go to untracked<br></br>\n                Existing files go to <InlineCode>D</InlineCode> and go to untracked<br></br>\n                All the changed was kept and you did in vain.\n            </Typography>\n        </div>\n    );\n}\n\nexport default Remove;","import React from 'react'\nimport Typography from '@material-ui/core/Typography';\nimport PrismCode from '../../../components/PrismCode'\nimport InlineCode from '../../../components/InlineCode';\n\n\nfunction Rebase() {\n    const gits =\n        [\n            `$ git rebase [commit] -i\\n\n# pick    : pure situation as you think\n# squash  : merge with prev but keep its message\n# fixup   : merge with prev but drop its message\n# drop    : dump it\n# edit    : breaking point here, \n            choose to edit commit message or do something then --continue\n# reword  : breaking point here, edit commit message\n# exec    : ?\\n`,\n\n            '$ git rebase [prevCommit] -i',\n            '$ git rebase --onto [to] [from]',\n\n`A -> B -> C1 -> D1 -> E1 -> F1(current branch)\n        |\n        C -> D -> E -> F`,\n\n            `$ git rebase --onto E C1`,\n\n`A -> B -> C -> D -> E -> C1 -> D1 -> E1 -> F1\n                       |\n                       F`,\n        ]\n    return (\n        <div>\n            <Typography variant=\"body1\" gutterBottom>\n               互動模式\n            </Typography>\n            <PrismCode code={gits[0]} language=\"sh\" />\n\n            <Typography variant=\"body1\" gutterBottom>\n                你不想要上一個commit，所以基於上上一個commit，進入互動去把上一個commit設為<InlineCode>drop</InlineCode>\n            </Typography>\n            <PrismCode code={'$ git rebase [prevCommit] -i'} language=\"sh\" />\n\n            <Typography variant=\"body1\" gutterBottom>\n                移植\n            </Typography>\n            <PrismCode code={gits[2]} language=\"sh\" />\n\n            <Typography variant=\"h6\" gutterBottom>現在</Typography>\n            <PrismCode code={gits[3]} language=\"sh\" />\n            <Typography variant=\"body1\" gutterBottom>do</Typography>\n            <PrismCode code={gits[4]} language=\"?\" />\n            <Typography variant=\"body1\" gutterBottom>C1移植到了E</Typography>\n            <PrismCode code={gits[5]} language=\"?\" />\n        </div>\n    );\n}\n\nexport default Rebase;","import React from 'react'\nimport Typography from '@material-ui/core/Typography';\nimport PrismCode from '../../../components/PrismCode'\nimport InlineCode from '../../../components/InlineCode';\n\n\nfunction Config() {\n    const gits =\n        [\n            '$ git config --list --system',\n            `$ git config --global alias.sts \"status -s\"`,\n            '$ git config --global core.autocrlf true',\n            '$ git config --global help.autocorrect 1',\n        ]\n\n    const levels = ['system', 'global', 'local']\n    return (\n        <div>\n\n            <Typography variant=\"body1\" gutterBottom>\n                三種等級的git設定檔案{levels.map(l => <InlineCode>{`--${l}`}</InlineCode>)}\n            </Typography>\n\n\n            <Typography variant=\"body1\" gutterBottom>\n                列出最高等級的設定\n            </Typography>\n            <PrismCode code={gits[0]} language=\"sh\" />\n\n            <Typography variant=\"body1\" gutterBottom>\n                寫給全域的指令，更方便組合要下的指令\n            </Typography>\n            <PrismCode code={gits[1]} language=\"sh\" />\n\n\n\n            <Typography variant=\"body1\" gutterBottom>\n                現在是微軟電腦則讓它為true，代表在提交的時候把所有cslf變成lf，當你要更新或是轉branch時，會把lf轉為微軟電腦的csrf；\n                MacO或是Linux，則寫成<InlineCode>input</InlineCode>代表不需要轉換<br />\n                除非你確認你寫的產品都是在微軟環境使用就沒差不用改～\n            </Typography>\n            <PrismCode code={gits[2]} language=\"sh\" />\n\n\n\n            <Typography variant=\"body1\" gutterBottom>\n                當指令有typo時，git會猜並且執行指令，一單位是100毫秒\n            </Typography>\n            <PrismCode code={gits[3]} language=\"sh\" />\n        </div>\n    );\n}\n\nexport default Config;","import React from 'react'\nimport Typography from '@material-ui/core/Typography';\nimport PrismCode from '../../../components/PrismCode'\nimport InlineCode from '../../../components/InlineCode'\n\n\nfunction Stash() {\n    const gits =\n        [\n            '$ git stash',\n            '$ git stash pop',\n            `$ git stash apply`,\n            `$ git stash apply \"stash@{1}\"`,\n            `$ git stash drop`,\n            `$ git stash drop \"stash@{1}\"`,\n            `$ git stash clear`,\n            `$ git stash save \"store my draft\"`,\n            \"$ git stash -u \",\n            `$ git cat-file -p stash\ntree a2f7156f648755276d1dc67fc6461f39134c93f5\nparent 89d5d8ed1e5aa37ec449abfcc658dee010e6e217\nparent 290d089dbd7b06057e21dc2bb0f53e7b2838380a\nparent fd6e5d7106f52bb4bd77d6d682fa9d9b6435c3e4\nauthor jia0_nn <linao264590000@gmail.com> 1599486115 +0800\ncommitter jia0_nn <linao264590000@gmail.com> 1599486115 +0800`,\n\n            `$ git cat-file -p 89d5\ntree 7c1c39c9d488bb828ed79eac9d88a6c5b1c072e5\nparent b065aefc9806fc66a99e8c7f75a73b1541459ced\nauthor jia0_nn <linao264590000@gmail.com> 1599485788 +0800\ncommitter jia0_nn <linao264590000@gmail.com> 1599485788 +0800\n            \nadd and modi`,\n\n\n            `$ git cat-file -p 290d\ntree 7170260ab311d9c16548e0d2b7d5eb9f5b1a9c55\nparent 89d5d8ed1e5aa37ec449abfcc658dee010e6e217\nauthor jia0_nn <linao264590000@gmail.com> 1599486115 +0800\ncommitter jia0_nn <linao264590000@gmail.com> 1599486115 +0800\n            \nindex on master: 89d5d8e add and modi\n`,\n\n\n            `$ git cat-file -p fd6e\ntree 08c56681eceec443b14ad503fa7ebf1c46652c50\nauthor jia0_nn <linao264590000@gmail.com> 1599486115 +0800\ncommitter jia0_nn <linao264590000@gmail.com> 1599486115 +0800\n\nuntracked files on master: 89d5d8e add and modi`,\n\n            `$ git stash save --keep-index`\n        ]\n    return (\n        <div>\n            <Typography variant=\"h5\" gutterBottom>Like a draft, and stash is stack</Typography>\n            <Typography variant=\"body1\" gutterBottom>\n                把現在所有的改動丟進去，除了untracked狀態的不行之外\n            </Typography>\n            <PrismCode code={gits[0]} language=\"sh\" />\n\n\n\n            <Typography variant=\"body1\" gutterBottom>\n                叫回來，不管之前是在工作目錄或是暫存區，都會回到工作目錄\n            </Typography>\n            <PrismCode code={gits[1]} language=\"sh\" />\n\n\n\n            <Typography variant=\"body1\" gutterBottom>\n                叫回來，但與上面不同的是，還是會保留在stack裡面\n            </Typography>\n            <PrismCode code={gits[2]} language=\"sh\" />\n\n\n\n            <Typography variant=\"body1\" gutterBottom>\n                呼叫最新的第二個\n            </Typography>\n            <PrismCode code={gits[3]} language=\"sh\" />\n\n\n\n            <Typography variant=\"body1\" gutterBottom>\n                移除目前stash stack裡面最新一個\n            </Typography>\n            <PrismCode code={gits[4]} language=\"sh\" />\n\n\n\n            <Typography variant=\"body1\" gutterBottom>\n                移除目前stash stack裡面第二個\n            </Typography>\n            <PrismCode code={gits[5]} language=\"sh\" />\n\n\n            <Typography variant=\"body1\" gutterBottom>\n                清空\n            </Typography>\n            <PrismCode code={gits[6]} language=\"sh\" />\n\n\n\n            <Typography variant=\"body1\" gutterBottom>\n                也可以在丟給stash的時候給它訊息\n            </Typography>\n            <PrismCode code={gits[7]} language=\"sh\" />\n\n\n            <Typography variant=\"body1\" gutterBottom>\n                連帶untracked都丟過去\n            </Typography>\n            <PrismCode code={gits[8]} language=\"sh\" />\n\n\n            <Typography variant=\"h5\" gutterBottom>Brainstorming</Typography>\n            <Typography variant=\"body1\" gutterBottom>\n                改動<InlineCode>a, b</InlineCode>，刪除<InlineCode>e, f</InlineCode>，建立<InlineCode>x, y</InlineCode><br></br>\n                將<InlineCode>a e x</InlineCode>放到暫存區\n                現在我們下<InlineCode>git stash -u</InlineCode>的指令\n            </Typography>\n            <PrismCode code={gits[9]} language=\"sh\" />\n\n\n            <Typography variant=\"body1\" gutterBottom>\n                現在查看每個parent在幹什麼，分別是：<i>上個改動</i>, <i>工作目錄</i>以及<i>untracked</i>。\n            </Typography>\n            <PrismCode code={gits[10]} language=\"sh\" />\n            <PrismCode code={gits[11]} language=\"sh\" />\n            <PrismCode code={gits[12]} language=\"sh\" />\n\n\n            <Typography variant=\"body1\" gutterBottom>\n                如果剛剛的狀況只使用<InlineCode>git stash</InlineCode>，只會有列出兩個parents\n            </Typography>\n\n\n\n            <Typography variant=\"body1\" gutterBottom>\n                Continuing <InlineCode>git stash -u</InlineCode>...\n            </Typography>\n            <Typography variant=\"body1\" gutterBottom>\n                Scan <InlineCode>git diff HEAD [tree, parent 1-3]</InlineCode>.\n                tree means \"modified\" no matter red or green and \"new file on stage\" <br></br>\n                parent1 means HEAD compare to last commit. print nothing<br></br>\n                parent2 means <InlineCode>REALLY green status modifed greean and new on stage</InlineCode>.<br></br>\n                parent3 means <InlineCode>except untracked files, exsting will be red, new will be green, it will show red abc and green y</InlineCode>.<br></br>\n                {/* 相較於 1.existing a,b,c 2.create e,f,g 3.create x,y => \n                    git diff HEAD parent3會比較HEAD與剛剛的untracked file\n                    會呈現delete a,b,c new x,y的結果\n                */}\n            </Typography>\n\n\n            <Typography variant=\"body1\" gutterBottom>\n               只把工作目錄丟到stash，暫存區保留\n            </Typography>\n            <PrismCode code={gits[13]} language=\"sh\" />\n        </div>\n    );\n}\n\nexport default Stash;","import React, { useState, useRef } from 'react'\nimport * as Posts from \"./posts\";\nimport { Helmet } from \"react-helmet\";\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nimport { useEventCallback } from \"rxjs-hooks\";\nimport { fromEvent } from \"rxjs\";\nimport { map, switchMap, takeUntil, withLatestFrom } from \"rxjs/operators\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    boxShadow: '1px 1px 4px 0px rgba(0,0,0,0.2)',\n    marginTop: '24px',\n  },\n  list: {\n    width: '100%',\n    backgroundColor: theme.palette.background.paper,\n    height: '70vh',\n    overflowY: 'scroll',\n    boxShadow: '1px 1px 4px 0px rgba(0,0,0,0.2)',\n    flex: '1 1 100px',\n\n  },\n  render: {\n    maxHeight: '70vh',\n    overflowY: 'scroll',\n    background: '#ffffff',\n    padding: '24px',\n    flex: '1 1 500px',\n  },\n  resizer: {\n    background: 'orange',\n    cursor: 'pointer',\n    alignItems: 'center',\n    color: 'white',\n    width: '20px'\n  },\n}));\n\nfunction Gits() {\n  const [Post, setPost] = useState(null)\n  const classes = useStyles();\n  const handleGistRender = (c) => {\n    setPost(c())\n  }\n\n  const leftEle = useRef(null);\n  const [onMouseDown, leftX] = useEventCallback(\n    (event$, inputs$) => {\n      return event$.pipe(\n        withLatestFrom(inputs$.pipe(map(([leftEle]) => leftEle))),\n        switchMap(([event, leftEle]) => {\n          console.log(event);\n          const leftStyle = getComputedStyle(leftEle.current);\n          const width0 = parseFloat(leftStyle.getPropertyValue(\"width\"));\n          const startX = event.clientX;\n          return fromEvent(window, \"mousemove\").pipe(\n            map((moveEvent) => moveEvent.clientX - startX + width0),\n            takeUntil(fromEvent(window, \"mouseup\"))\n          );\n        })\n      );\n    },\n    null,\n    [leftEle]\n  );\n\n  const leftStyle = {\n    flexBasis: leftX === null ? 0 : Math.max(200, leftX),\n    flexGrow: leftX === null ? 1 : 0,\n    flexShrink: 0\n  };\n\n  return (\n    <div className={classes.root}>\n      <Helmet>\n        <title>Git snippet</title>\n        <script src=\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.21.0/prism.min.js\" integrity=\"sha512-WkVkkoB31AoI9DAk6SEEEyacH9etQXKUov4JRRuM1Y681VsTq7jYgrRw06cbP6Io7kPsKx+tLFpH/HXZSZ2YEQ==\" crossorigin=\"anonymous\"></script>\n      </Helmet>\n      <List className={classes.list} style={leftStyle} ref={leftEle}>\n        {Posts.default.map(a =>\n          <ListItem\n            button\n            className={classes.card}\n            onClick={() => handleGistRender(a.component)}>\n            <ListItemText primary={a.title} />\n          </ListItem>\n        )}\n      </List>\n      <div className={classes.resizer} onMouseDown={onMouseDown}></div>\n      <div className={classes.render}>\n        {Post || 'NOTHING'}\n      </div>\n    </div>\n  );\n}\n\nexport default Gits;","import React from 'react';\nimport './App.css';\nimport RandomlyMurMur from './articles/randomly-murmur'\nimport Git from './articles/git'\nimport { Switch, Route, NavLink } from \"react-router-dom\";\nimport { Button } from '@material-ui/core'\n\nfunction App() {\n  return (\n    <div className=\"tech-articles\">\n      <div className=\"article-category\">\n        <NavLink to=\"/randomlymurmur\" activeClassName=\"current-category\">\n          <Button size=\"large\">Randomly MurMur..</Button>\n        </NavLink>\n        <NavLink to=\"/git\" activeClassName=\"current-category\">\n          <Button size=\"large\">Git</Button>\n        </NavLink>\n      </div>\n\n      <Switch>\n        <Route path=\"/randomlymurmur\">\n          <RandomlyMurMur />\n        </Route>\n        <Route path=\"/git\">\n          <Git />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </BrowserRouter>,\n  document.getElementById('tech-article-root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/murmur1.230ff83d.md\";","module.exports = __webpack_public_path__ + \"static/media/murmur2.b0db7e42.md\";","module.exports = __webpack_public_path__ + \"static/media/murmur3.2020d910.md\";"],"sourceRoot":""}